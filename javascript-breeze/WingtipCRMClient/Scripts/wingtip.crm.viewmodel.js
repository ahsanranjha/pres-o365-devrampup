/// <reference path="breeze.min.js" />
/// <reference path="q.min.js" />
/// <reference path="knockout-2.3.0.js" />
/// <reference path="wingtip.customers.model.js" />

"use strict";

var Wingtip = window.Wingtip || {};
Wingtip.Crm = Wingtip.Crm || {};

Wingtip.Crm.ViewModel = function () {

    breeze.config.initializeAdapterInstances({ dataService: "webApiOData" });

    //send credentials along with call to service
    var ajaxAdapter = breeze.config.getAdapterInstance
    ajaxAdapter.defaultSettings = {
        xhrFields: {
            withCredentials: true
        }
    };

    //var manager = new breeze.EntityManager("http://localhost:54875/odata/");
    var manager = new breeze.EntityManager("https://wingtipcrmservice.azurewebsites.net/odata/");
    var customers = ko.observableArray();

    var getCustomers = function () { return customers };

    var saveChanges = function () {
        manager.saveChanges().then(
            function () {
                manager.clear();
                loadCustomers();
            }
            , function (err) { onError(err); });
    };

    var loadCustomers = function (localQuery) {

        $("#progress").show();
        $("#cmdSaveChanges").hide();

        var query = new breeze.EntityQuery().from("Customers").orderBy("LastName", "FirstName");

        if (localQuery === true) {
            //local query
            onLoadCustomersComplete(manager.executeQueryLocally(query));
        }
        else {
            //query the OData service
            manager.executeQuery(query).then(
                function (data) {
                    onLoadCustomersComplete(data.results);
                },
                function (err) {
                    onError(err);
                }
            );
        }

    };

    var onLoadCustomersComplete = function (data) {

        customers.destroyAll();

        var odataCustomers = data;

        for (var index = 0; index < odataCustomers.length; index++) {
            var odataCustomer = odataCustomers[index];
            var id = odataCustomer.ID();
            var fn = odataCustomer.FirstName();
            var ln = odataCustomer.LastName();
            var cm = odataCustomer.Company();
            var em = odataCustomer.EmailAddress();
            var wk = odataCustomer.WorkPhone();
            var hm = odataCustomer.HomePhone();
            var customer = Wingtip.Crm.Model.create(id, fn, ln, cm, em, wk, hm);
            customers.push(customer);
        }

        $("#cmdSaveChanges").val("Save Changes (" + manager.getChanges().length + ")");
        $("#progress").hide();
        $("#cmdSaveChanges").show();

    }

    var getCustomer = function (Id) {
        return manager.fetchEntityByKey("Customer",Id);
    }

    var addCustomer = function (FirstName, LastName, Company, EmailAddress, WorkPhone, HomePhone) {

        var entityType = manager.metadataStore.getEntityType("Customer");
        entityType.setProperties({autoGeneratedKeyType: breeze.AutoGeneratedKeyType.Identity});
        var newCustomer = entityType.createEntity({
            "Id": -1,
            "FirstName": FirstName,
            "LastName": LastName,
            "Company": Company,
            "EmailAddress": EmailAddress,
            "WorkPhone": WorkPhone,
            "HomePhone": HomePhone
        });
        manager.addEntity(newCustomer);
        loadCustomers(true);
    };

    var updateCustomer = function (Id, FirstName, LastName, Company, EmailAddress, WorkPhone, HomePhone) {

        var customer = manager.getEntityByKey("Customer",Id);
        customer.FirstName(FirstName);
        customer.LastName(LastName);
        customer.Company(Company);
        customer.EmailAddress(EmailAddress);
        customer.WorkPhone(WorkPhone);
        customer.HomePhone(HomePhone);
        loadCustomers(true);
    };

    var deleteCustomer = function (Id) {
        var customer = manager.getEntityByKey("Customer",Id);
        customer.entityAspect.setDeleted();
        loadCustomers(true);
    };

    function onError(error) {
        alert("Error: " + JSON.stringify(error));
    }

    //public interface
    return {
        saveChanges: saveChanges,
        loadCustomers: loadCustomers,
        getCustomers: getCustomers,
        addCustomer: addCustomer,
        getCustomer: getCustomer,
        updateCustomer: updateCustomer,
        deleteCustomer: deleteCustomer
    };

}();